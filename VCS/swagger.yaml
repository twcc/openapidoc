openapi: 3.0.3
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Gateway-API/VM-API/1.0.0
  - description: real url
    url: https://apigateway.twcc.ai/api/v3/openstack-taichung-default-2/
info:
  # description: This is a simple API
  version: 1.0.0
  title: VCS API
security:
  - ApiKeyAuth: []
tags:
  - name: project
    description: 專案API相關
  - name: solution
    description: 方案API相關
  - name: flavor
  - name: image
  - name: keypair
  - name: load balancer
  - name: security group
  - name: network
  - name: ip
  - name: volume
  - name: snapshot
  - name: server
  - name: site
paths:
  /projects/:
    get:
      tags:
        - project
      summary: 取得專案列表
      description: |
        查詢所有擁有的專案
      parameters:
        - in: query
          name: name
          description: 利用專案名查詢
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: 取得專案詳細資訊
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OneOfProject'
        401:
          $ref: '#/components/responses/401Unauthorized'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /projects/{project_id}/:
    get:
      tags:
        - project
      summary: 取得單一專案訊息
      description: |
        查詢所有擁有的專案
      parameters:
        - $ref: '#/components/parameters/ProjectInPathParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: 取得專案詳細資訊
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneOfProject'
        404:
          $ref: '#/components/responses/40401NOTFOUND'
        401:
          $ref: '#/components/responses/401Unauthorized'
        500:
          $ref: '#/components/responses/500InternalServerError'
        503:
          $ref: '#/components/responses/50301SERVICEUNAVAILABLE'
  /projects/{project_id}/solutions/:
    get:
      tags:
        - project
      summary: 取得專案的解決方案list
      description: |
        查詢該專案的解決放案(Res: 解決方案ID)
      parameters:
        - $ref: '#/components/parameters/ProjectInPathParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description:  解決方案
          content:
            application/json:
              schema:
                type: object
                properties:
                  solutions:
                    type: array
                    items:
                      type: integer
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403FORBIDDEN'
        404:
          $ref: '#/components/responses/40401NOTFOUND'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /projects/{project_id}/solutions/{solutions_id}/:
    get:
      tags:
        - project
      summary: Get extra properties of a solution for a project
      parameters:
        - $ref: '#/components/parameters/ProjectInPathParam'
        - $ref: '#/components/parameters/SolutionsIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description:  解決方案
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  site_extra_prop:
                    $ref: '#/components/schemas/site_extra_prop'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403FORBIDDEN'
        404:
          $ref: '#/components/responses/40401NOTFOUND'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /solutions/:
    get:
      tags:
        - solution
      summary: List solutions
      servers:
      - url: https://apigateway.twcc.ai/api/v3
        description: solution有專屬url
      parameters:
        - in: query
          name: project
          description: 此項與project_name必填一個
          required: false
          schema:
            type: string
        - in: query
          name: project_name
          description: 此項與project必填一個
          required: false
          schema:
            type: string
        - in: query
          name: category
          description: Solution category
          required: true
          schema:
            type: string
            example: os
        - in: header
          name: x-api-host
          description: 認證必要參數
          required: true
          schema:
            type: string
            default: goc
      responses:
        200:
          description:  解決方案
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SolutionSerializer'
        400:
          $ref: '#/components/responses/40000BadRequest'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /solutions/{solutions_id}/:
    get:
      tags:
        - solution
      summary: Get a solution detail
      servers:
      - url: https://apigateway.twcc.ai/api/v3
        description: solution有專屬url
      parameters:
        - $ref: '#/components/parameters/SolutionsIDParam'
        - $ref: '#/components/parameters/ProjectInQueryParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description:  解決方案
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionSerializer'
  /flavors/:
    get:
      tags:
        - flavor
      summary: List flavors
      parameters:
        - in: query
          name: is_public
          description: 是否公開
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: 取得所有
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlavorSerializer'
  /flavors/{flavor_id}/:
    get:
      tags:
        - flavor
      summary: Get details of a flavor
      parameters:
        - $ref: '#/components/parameters/FlavorIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: 取得詳細flavor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorSerializer'
  /images/:
    get:
      tags:
        - image
      summary: List images
      parameters:
        - $ref: '#/components/parameters/ProjectInQueryParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: 取得所有
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageSerializer'
  /images/{image_id}/:
    get:
      tags:
        - image
      summary: Get details of a image
      parameters:
        - $ref: '#/components/parameters/ImageIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: 取得詳細flavor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageSerializer'
  /keypairs/:
    get:
      tags:
      - keypair
      summary: List Keypairs
      parameters:
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeypairSerializer'
    post:
      tags:
      - keypair
      summary: Create a Keypair
      parameters:
        - $ref: '#/components/parameters/ApiHostParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
              - name
              properties:
                name:
                  type: string
                  description: The name of the keypair
                public_key:
                  type: string
                  description: Public key of the keypair
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /keypairs/{key_name}/:
    get:
      tags:
      - keypair
      summary: Get Keypair Detail
      parameters:
      - name: key_name
        in: path
        description: Keypair Name
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/KeypairSerializer'
                - type: object
                properties:
                  public_key:
                    type: string
                  create_time:
                    type: string
                    format: date-time
    delete:
      tags:
      - keypair
      summary: Delete a Keypair
      parameters:
      - name: key_name
        in: path
        description: Keypair Name
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/ApiHostParam'
      responses:
        204:
          description: No Content
          content: {}
  /loadbalancers/:
    get:
      tags:
      - load balancer
      summary: Lists load balancers
      parameters:
        - $ref: '#/components/parameters/ProjectInQueryParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeypairSerializer'
  /security_groups/:
    get:
      tags:
      - security group
      summary: List security rules of a server
      parameters:
        - $ref: '#/components/parameters/ProjectInQueryParam'
        - $ref: '#/components/parameters/ServerInQueryParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecurityGroupSerializer'
  /security_groups/{security_group_id}/:
    patch:
      tags: 
      - security group
      summary: Add a security rule to a security group.
      parameters: 
        - $ref: '#/components/parameters/SecurityGroupIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityRuleSerializer'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecurityGroupSerializer'
  /security_group_rules/{rule_id}/:
    delete:
      tags: 
      - security group
      summary: Delete a rule in a security group.
      parameters: 
        - $ref: '#/components/parameters/RuleIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        202:
          description: No Content
          content: {}
  /networks/:
    get:
      tags:
      - network
      summary: Lists networks
      parameters: 
        - $ref: '#/components/parameters/ProjectInQueryParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkSerializer'
  /ips/:
    get:
      tags: 
      - ip
      summary: List IPs
      parameters: 
        - $ref: '#/components/parameters/ProjectInQueryParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IPSerializer'
  /ips/{ip_id}/:
    get:
      tags: 
      - ip
      summary: Get a Elastic IP detail
      parameters: 
        - $ref: '#/components/parameters/IPIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPSerializer'
  /volumes/:
    get:
      tags:
      - volume
      summary: List volumes
      description: List volumes
      parameters:
        - $ref: '#/components/parameters/ProjectInQueryParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeSerializer'
    post:
      tags:
      - volume
      summary: Create a volume
      description: Create a volume
      parameters:
      - $ref: '#/components/parameters/ApiHostParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VolumePostSerializer'
              - type: object
              properties:
                desc:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/VolumePostSerializer'
                - type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  platform:
                    type: string
  /volumes/{volume_id}/:
    get:
      tags:
      - volume
      summary: Get details of a volume
      parameters:
        - $ref: '#/components/parameters/VolumeIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSerializer'
    delete:
      tags: 
      - volume
      summary: Delete a volume
      parameters:
        - $ref: '#/components/parameters/VolumeIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        204:
          description: No Content
          content: {}
  /volumes/{volume_id}/action/:
    put:
      tags: 
      - volume
      summary: 連結或段開VM
      parameters: 
        - $ref: '#/components/parameters/VolumeIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      requestBody:
        description: Volume action body
        content:
          application/json:
            schema:
              type: object
              properties:
                server:
                  type: integer
                status:
                  type: string
                  example: extend
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  mountpoint:
                    type: string
                  server_id:
                    type: integer
                  volume_id:
                    type: integer
  /snapshots/:
    get:
      tags: 
      - snapshot
      summary: Get snapshots
      parameters: 
        - name: status
          in: query
          description: Snapshot Status
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ProjectInQueryParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SnapshotSerializer'
    post:
      tags: 
      - snapshot
      summary: Take a snapshot
      parameters: 
        - $ref: '#/components/parameters/ApiHostParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
              - name
              - volume
              properties:
                name:
                  type: string
                  description: Snapshot name
                desc:
                  type: string
                  description: Description
                volume:
                  type: integer
                  description: Source volume ID
                  format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotSerializer'
  /snapshots/{snapshot_id}:
    get:
      tags: 
      - snapshot
      summary: Get details of a snapshot
      parameters: 
        - $ref: '#/components/parameters/SnapshotIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotSerializer'
    delete:
      tags: 
      - snapshot
      summary: Delete a snapshot
      parameters: 
        - $ref: '#/components/parameters/SnapshotIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        204:
          description: No Content
          content: {}
  /servers/:
    get:
      tags: 
      - server
      summary: List servers
      parameters: 
        - $ref: '#/components/parameters/ProjectInQueryParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerSerializer'
  /servers/{server_id}/:
    get:
      tags: 
      - server
      summary: Get details of a server
      parameters: 
        - $ref: '#/components/parameters/ServerIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSerializer'
  /servers/{server_id}/cpu/:
    get:
      tags: 
      - server
      summary: Get a Server CPU Utilization
      parameters: 
        - name: begin_time
          in: query
          description: Query start time
          schema:
            type: string
        - name: end_time
          in: query
          description: Query finish time
          schema:
            type: string
        - $ref: '#/components/parameters/ServerIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerCPUUtilSerializer'
  /servers/{server_id}/disk/:
    get:
      tags: 
      - server
      summary: Get a Server Disk Utilization
      parameters: 
        - name: meter_name
          in: query
          description: Query meter name
          required: true
          schema:
            type: string
            enum: [disk_read_bytes_rate ,disk_write_bytes_rate]
        - name: begin_time
          in: query
          description: Query start time
          schema:
            type: string
        - name: end_time
          in: query
          description: Query finish time
          schema:
            type: string
        - $ref: '#/components/parameters/ServerIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerDiskReadUtilSerializer'
  /servers/{server_id}/memory/:
    get:
      tags: 
      - server
      summary: Get a Server Memory Utilization
      parameters: 
        - name: begin_time
          in: query
          description: Query start time
          schema:
            type: string
        - name: end_time
          in: query
          description: Query finish time
          schema:
            type: string
        - $ref: '#/components/parameters/ServerIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerMemoryUtilSerializer'
  /servers/{server_id}/net/:
    get:
      tags: 
      - server
      summary: Get a Server Network Utilization
      parameters: 
        - name: begin_time
          in: query
          description: Query start time
          schema:
            type: string
        - name: end_time
          in: query
          description: Query finish time
          schema:
            type: string
        - name: meter_name
          in: query
          description: Query meter name
          required: true
          schema:
            type: string
            enum: [network_incoming_bytes_rate, network_outgoing_bytes_rate]
        - $ref: '#/components/parameters/ServerIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerNetworkIncomingSerializer'
  /sites/:
    get:
      tags:
      - site
      summary: List sites
      parameters:
        - $ref: '#/components/parameters/ProjectInQueryParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SiteSerializer'
  /sites/{site_id}/:
    get:
      tags:
      - site
      summary: Get details of a site
      parameters:
        - $ref: '#/components/parameters/SiteIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/SiteSerializer'
  /sites/{site_id}/parameters/:
    get:
      tags:
      - site
      summary: Get parameters of a site
      parameters:
        - $ref: '#/components/parameters/SiteIDParam'
        - $ref: '#/components/parameters/ApiHostParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  image:
                    type: string
                  floating_ip:
                    type: string
                  volume_type:
                    type: string
                  static_ip:
                    type: string
                  volume_size:
                    type: string
                  env:
                    type: object
                  private_network:
                    type: string
                  system_volume_type:
                    type: string
                  flavor:
                    type: string
                  ports:
                    type: string
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    OneOfProject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        matchLabels:
          type: array
          items:
            type: string
        platform:
          type: string
        transparent_mode:
          type: boolean
    site_extra_prop:
      type: object
      properties:
        static-ip:
          type: array
          items:
            type: string
        locale:
          type: array
          items:
            type: string
        image:
          type: array
          items:
            type: string
        private-network:
          type: array
          items:
            type: string
        timezone:
          type: array
          items:
            type: string
        system-volume-type:
          type: array
          items:
            type: string
        floating-ip:
          type: array
          items:
            type: string
        flavor:
          type: array
          items:
            type: string
        volume-type:
          type: array
          items:
            type: string
        password:
          type: string
        ports:
          type: string
        volume-size:
          type: string
    SolutionSerializer:
      required:
      - category
      - create_time
      - desc
      - id
      - is_public
      - labels
      - name
      - state
      type: object
      properties:
        desc:
          type: string
        id:
          type: integer
          format: int64
        labels:
          type: array
          items:
            type: string
        name:
          type: string
        state:
          type: string
        category:
          type: string
        create_time:
          type: string
          format: date-time
        is_public:
          type: boolean
        is_tenant_admin_only:
          type: boolean
    FlavorSerializer:
      required:
      - id
      - metadata
      - name
      - platform
      - resource
      type: object
      properties:
        id:
          type: integer
          format: int64
        metadata:
          type: object
          properties: 
            gpu_type:
              type: string
        name:
          type: string
        platform:
          type: string
        is_public:
          type: boolean
        resource:
          type: object
          properties:
            cpu:
              type: integer
              format: int64
            memory:
              type: integer
              format: int64
            disk:
              type: integer
              format: int64
            gpu:
              type: integer
              format: int64
            nic:
              type: integer
              format: int64
            shm:
              type: integer
              format: int64
    ImageSerializer:
      required:
      - create_time
      - id
      - is_public
      - name
      - platform
      - server
      - status
      type: object
      properties:
        create_time:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        is_public:
          type: boolean
        name:
          type: string
        platform:
          type: string
        user:
          $ref: '#/components/schemas/UserSerializer'
        server:
          $ref: '#/components/schemas/ServerFieldSerializer'
        status:
          type: string
    ServerFieldSerializer:
      required:
      - hostname
      - id
      type: object
      properties:
        hostname:
          type: string
        id:
          type: integer
          format: int64
    UserSerializer:
      required:
      - display_name
      - email
      - id
      - username
      type: object
      properties:
        id:
          type: string
        display_name:
          type: string
        username:
          type: string
        email:
          type: string
    KeypairSerializer:
      required:
      - fingerprint
      - name
      - platform
      - user
      type: object
      properties:
        name:
          type: string
        fingerprint:
          type: string
        platform:
          type: string
        user:
          $ref: '#/components/schemas/UserSerializer'
    SecurityGroupSerializer:
      required:
      - id
      - name
      - platform
      - security_group_rules
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        security_group_rules:
          type: array
          items:
            $ref: '#/components/schemas/SecurityRuleSerializer'
    SecurityRuleSerializer:
      required:
      - direction
      - ethertype
      - id
      - port_range_max
      - port_range_min
      - protocol
      - remote_ip_prefix
      type: object
      properties:
        direction:
          type: string
          enum: [egress, ingress]
        ethertype:
          type: string
        id:
          type: string
        port_range_max:
          type: integer
          minimum: 1
          maximum: 65535
        port_range_min:
          type: integer
          minimum: 1
          maximum: 65535
        protocol:
          type: string
          enum: [tcp, udp, udplite, sctp, icmp, dccp]
        remote_ip_prefix:
          type: string
    NetworkSerializer:
      required:
      - cidr
      - create_time
      - ext_net
      - gateway
      - id
      - ip_version
      - name
      - nameservers
      - project
      - status
      - with_router
      type: object
      properties:
        cidr:
          type: string
        ext_net:
          type: string
        gateway:
          type: string
        nameservers:
          type: array
          items:
            type: string
        id:
          type: integer
          format: int64
        ip_version:
          type: integer
          format: int64
        name:
          type: string
        user:
          $ref: '#/components/schemas/UserSerializer'
        project:
          type: integer
          format: int64
        status:
          type: string
        with_router:
          type: boolean
        create_time:
          type: string
          format: date-time
        dns_domain:
          type: string
    IPSerializer:
      required:
      - address
      type: object
      properties:
        address:
          type: string
        create_time:
          type: string
          format: date-time
        desc:
          type: string
        id:
          type: integer
          format: int64
        occupied_resource:
          $ref: '#/components/schemas/OccupiedResourceSerializer'
        project:
          $ref: '#/components/schemas/ProjectFieldSerializer'
        status:
          type: string
        status_reason:
          type: string
        type:
          type: string
          enum:
          - FLOATING
          - STATIC
        user:
          $ref: '#/components/schemas/UserSerializer'
    OccupiedResourceSerializer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
    ProjectFieldSerializer:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    VolumeSerializer:
      required:
      - attached_host
      - create_time
      - id
      - is_attached
      - is_bootable
      - mountpoint
      - name
      - platform
      - project
      - size
      - status
      - user
      type: object
      properties:
        attached_host:
          $ref: '#/components/schemas/AttachedHostSerializer'
        mountpoint:
          type: array
          items:
            type: string
        is_attached:
          type: boolean
        create_time:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        is_bootable:
          type: boolean
        name:
          type: string
        platform:
          type: string
        project:
          $ref: '#/components/schemas/ProjectFieldSerializer'
        user:
          $ref: '#/components/schemas/UserSerializer'
        size:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          format: int64
        status:
          type: string
    AttachedHostSerializer:
      required:
      - hostname
      - id
      type: object
      properties:
        hostname:
          type: string
        id:
          type: integer
          format: int64
    VolumePostSerializer:
      required:
      - name
      - platform
      - project
      - size
      type: object
      properties:
        name:
          type: string
        project:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        volume_type:
          type: string
    SnapshotSerializer:
      required:
      - create_time
      - desc
      - id
      - name
      - platform
      - status
      - user
      - volume
      type: object
      properties:
        create_time:
          type: string
          format: date-time
        desc:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        platform:
          type: string
        status:
          type: string
        volume:
          $ref: '#/components/schemas/listSnapShotVolSerializer'
        user:
          $ref: '#/components/schemas/UserSerializer'
    listSnapShotVolSerializer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ServerSerializer:
      required:
      - auto_scaling_policy
      - availability_zone
      - flavor
      - fqdn
      - hostname
      - id
      - image
      - keypair
      - os
      - os_version
      - platform
      - private_nets
      - public_nets
      - site
      - status
      type: object
      properties:
        auto_scaling_policy:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
            status:
              type: string
            status_reason:
              type: string
        availability_zone:
          type: string
        flavor:
          type: string
        hostname:
          type: string
        id:
          type: integer
          format: int64
        image:
          type: string
        os:
          type: string
        os_version:
          type: string
        keypair:
          type: string
        platform:
          type: string
        private_nets:
          type: array
          items:
            $ref: '#/components/schemas/ServerNetObject'
        public_nets:
          type: array
          items:
            $ref: '#/components/schemas/ServerNetObject'
        site:
          type: integer
          format: int64
        status:
          type: string
        fqdn:
          type: string
    ServerNetObject:
      required:
      - ip
      - name
      type: object
      properties:
        name:
          type: string
        ip:
          type: string
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - FLOATING
          - STATIC
    ServerCPUUtilSerializer:
      required:
      - cpu_util
      - timestamp
      - unit
      type: object
      properties:
        cpu_util:
          type: string
        timestamp:
          type: string
          format: date-time
        unit:
          type: string
    ServerDiskReadUtilSerializer:
      required:
      - disk_read_bytes_rate
      - timestamp
      - unit
      type: object
      properties:
        disk_read_bytes_rate:
          type: string
        timestamp:
          type: string
          format: date-time
        unit:
          type: string
    ServerMemoryUtilSerializer:
      required:
      - memory_usage
      - timestamp
      - unit
      type: object
      properties:
        memory_usage:
          type: string
        timestamp:
          type: string
          format: date-time
        unit:
          type: string
    ServerNetworkIncomingSerializer:
      required:
      - network_incoming_bytes_rate
      - timestamp
      - unit
      type: object
      properties:
        network_incoming_bytes_rate:
          type: string
        timestamp:
          type: string
          format: date-time
        unit:
          type: string
    SiteSerializer:
      required:
      - callback
      - create_time
      - id
      - is_preemptive
      - name
      - platform
      - progress
      - project
      - public_ip
      - solution
      - status
      - termination_protection
      - user
      type: object
      properties:
        callback:
          type: string
        create_time:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        name:
          type: string
        platform:
          type: string
        progress:
          type: integer
          format: int64
        project:
          type: integer
          format: int64
        public_ip:
          type: string
        solution:
          type: integer
          format: int64
        status:
          type: string
        is_preemptive:
          type: boolean
        user:
          $ref: '#/components/schemas/UserSerializer'
        servers:
          type: array
          items:
            type: object
            properties:
              flavor_id:
                type: integer
                format: int64
              id:
                type: integer
                format: int64
              hostname:
                type: string
              status:
                type: string
        termination_protection:
          type: boolean
  parameters:
    ProjectInPathParam:
      name: project_id
      in: path
      description: 專案ID
      required: true
      schema:
        type: integer
    ProjectInQueryParam:
      name: project
      in: query
      description: 需要project ID才能查詢
      required: true
      schema:
        type: integer
    ServerInQueryParam:
      name: server
      in: query
      description: 需要server ID才能查詢
      required: true
      schema:
        type: integer
    SolutionsIDParam:
      name: solutions_id
      in: path
      description: 方案ID
      required: true
      schema:
        type: integer
    IPIDParam:
      name: ip_id
      in: path
      description: IP ID
      required: true
      schema:
        type: integer
    SecurityGroupIDParam:
      name: security_group_id
      in: path
      description: 安全性群組ID
      required: true
      schema:
        type: integer
    RuleIDParam:
      name: rule_id
      in: path
      description: rule ID
      required: true
      schema:
        type: integer
    FlavorIDParam:
      name: flavor_id
      in: path
      description: flavor ID
      required: true
      schema:
        type: integer
    ImageIDParam:
      name: image_id
      in: path
      description: image ID
      required: true
      schema:
        type: integer
    VolumeIDParam:
      name: volume_id
      in: path
      description: Volume ID
      required: true
      schema:
        type: integer
    SnapshotIDParam:
      name: snapshot_id
      in: path
      description: Snapshot ID
      required: true
      schema:
        type: integer
    ServerIDParam:
      name: server_id
      in: path
      description: Server ID
      required: true
      schema:
        type: integer
    SiteIDParam:
      name: site_id
      in: path
      description: Site ID
      required: true
      schema:
        type: integer
    ApiHostParam:
      name: x-api-host
      in: header
      description: 認證必要參數
      required: true
      schema:
        type: string
        default: openstack-taichung-default-2
  responses:
    200NotRoute:
      description: no route and no API found with those values
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            example: 
              message: no route and no API found with those values
    401Unauthorized:
      description: request is unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            example: 
              message: Your request is unauthorized
    403FORBIDDEN:
      description: do not have permission to perform this action
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            example: 
              message: "40301: You do not have permission to perform this action."
    40401NOTFOUND:
      description: Project not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            example: 
              message: "40401: Project {project_id} not found"
    50301SERVICEUNAVAILABLE:
      description: The project does not exist
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            example: 
              message: "50301: The project {project_id} does not exist"
    40000BadRequest:
      description: Non-system admin
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServerDiskReadUtilSerializer'
    500InternalServerError:
      description: Internal Server Error
      content: {}